# 배포시 릴리즈명에서 "loki-grafana" 사용금지
# 자동생성 이름과 중복돼서 service 생성시 충돌발생

test_pod:
  enabled: false

promtail:
  enabled: false

fluent-bit:
  enabled: false

prometheus:
  enabled: false

filebeat:
  enabled: false

logstash:
  enabled: false

# proxy is currently only used by loki test pod
# Note: If http_proxy/https_proxy are set, then no_proxy should include the
# loki service name, so that tests are able to communicate with the loki
# service.
proxy:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""


loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: 2.9.10        # 차트 2.9.12의 default: 2.6.1 (너무 구버전) # 구버전에선 필터링 이슈있음 # 3버전대로 마이그레이션시 추가작업 필요 
    pullPolicy: IfNotPresent
    
  # 클러스터 내부 Grafana에서 Default Datasource로 취급할것인가 여부
  isDefault: false

  # 클러스터 내부 Grafana에서 Loki Datasource를 프로비전하기 위한 ConfigMap에 사용됨. 외부노출시 사용불가.
  url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  datasource:
    jsonData: "{}"
    uid: ""

  service:
    type: LoadBalancer
    # nodePort:
    port: 3100
    annotations: {}
    labels: {}
    targetPort: http-metrics

  config:
    compactor:
      retention_enabled: true       # false면, 무제한 저장
    limits_config:
      retention_period: 168h        # default: 744h(31일), 최소 24h
      
  persistence:
    enabled: true
    size: 100Gi                     # 동적 프로비저닝시 지정
    # storageClassName:             # 동적 프로비저닝시 지정
    # existingClaim: loki-pv-claim  # 사전 설정된 pvc 있는 경우 이름을 지정 (정적 프로비저닝)

grafana:
  enabled: true
  sidecar:
    datasources:
      label: ""
      labelValue: ""
      enabled: true
      maxLines: 1000
  image:
    tag: 8.3.5

  service:
    enabled: true
    type: LoadBalancer
    port: 3000  # 80
    targetPort: 3000
      # targetPort: 4181 To be used with a proxy extraContainer
    ## Service annotations. Can be templated.
    annotations: {}
    labels: {}
    portName: service
    # Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
    appProtocol: ""
    
  adminUser: admin
  adminPassword: admin
  
  persistence:
    type: statefulset  # helm uninstall 해도 남아있게 하려면 statefulset
    enabled: true

  ## Configure grafana dashboard providers
  ## ref: http://docs.grafana.org/administration/provisioning/#dashboards
  ##
  ## `path` must be /var/lib/grafana/dashboards/<provider_name>
  ##
  dashboardProviders: # {}
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'my-default'
          orgId: 1
          folder: 'my-folder'
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/my-default

  ## Configure grafana dashboard to import
  ## NOTE: To use dashboards you must also enable/configure dashboardProviders
  ## ref: https://grafana.com/dashboards
  ##
  ## dashboards per provider, use provider name as key.
  ##
  dashboards: # {}
    my-default:
      logs-app:
        gnetId: 13639
        revision: 2
        datasource: Loki
      loki-kubernetes-logs:
        gnetId: 15141
        revision: 1
        datasource: Loki

